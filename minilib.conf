# config generated by mini-gcc.
# Save default. The minibuf is needed for malloc, printf, and file streams.
mini_buf 16000

# define headerguards, to prevent parsing the standard header
HEADERGUARDS

# Startup function
mini_start

# put the globals on stack.
# reserves a fixed register as pointer to the globals
# globals_on_stack

# define var (#define var arg)
# DEFINE var arg

# optimization Flag. Os,O1,O2 might be save. O3 is known to cause sometimes trouble
OPTFLAG -Os

# (with debug info)
#OPTFLAG -g -Og

# stripflag ( defaults to -s)
#STRIPFLAG

# Build minilib source
INCLUDESRC

# the ldscript to use
# Can be one of: default, onlytext, textandbss
LDSCRIPT default

# Shrink the compiled binary with shrinkelf
SHRINKELF

# generate debug info (-Og -g). Overwrites OPTFLAG, STRIPFLAG and SHRINKELF
#DEBUG

# generate debug info, including the source of minilib itself. (-Og -g). 
# Overwrites OPTFLAG, STRIPFLAG and SHRINKELF
#FULLDEBUG


# list of source files, supplied to gcc
# $1 expands to the current filename 
#SOURCES $1 file1.c file2.c

# the binary to be compiled ( -o $BINARY )
#BINARY a.out

# function switches. Only functions named below will be compiled

mini_exit
mini_fclose
mini_fopen
mini_fork
mini_fread
mini_free
mini_fseek
mini_ftell
mini_malloc
mini_memcmp
mini_memcpy
mini_memset
mini_perror
mini_printf
mini_dtodec
mini_rewind
mini_socket
mini_sprintf
mini_strcmp
mini_strcpy
mini_time
mini_usleep

mini_htons
mini_inet_aton
mini_errno
mini_itohex


mini_writes
#mini_printsl

